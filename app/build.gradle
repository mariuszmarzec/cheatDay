apply plugin: 'com.android.application'
apply plugin: 'kotlin-android'
apply plugin: 'kotlin-kapt'
apply plugin: 'kotlin-android-extensions'
apply plugin: "de.mannodermaus.android-junit5"

android {
    compileSdkVersion 29
    defaultConfig {
        applicationId "com.marzec.cheatday"
        minSdkVersion 29
        targetSdkVersion 29
        versionCode 1
        versionName "1.0"
        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"

        javaCompileOptions {
            annotationProcessorOptions {
                arguments = [
                        "room.schemaLocation"  : "$projectDir/schemas".toString(),
                        "room.incremental"     : "true",
                        "room.expandProjection": "true"]
            }

        }
    }

    sourceSets {
        androidTest.assets.srcDirs += files("$projectDir/schemas".toString())
    }

    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
        }
    }
}

dependencies {
    implementation fileTree(dir: 'libs', include: ['*.jar'])
    implementation "org.jetbrains.kotlin:kotlin-stdlib-jdk7:$kotlin_version"
    implementation "androidx.appcompat:appcompat:$appcompat_version"
    implementation "androidx.core:core-ktx:$core_ktx_version"
    implementation "androidx.constraintlayout:constraintlayout:$constraint_layout_version"
    implementation "com.squareup.retrofit2:retrofit:$retrofit_version"
    implementation "io.reactivex.rxjava2:rxjava:$rxjava_version"
    implementation "com.squareup.retrofit2:adapter-rxjava2:$retrofit_version"
    implementation "com.google.code.gson:gson:$gson_version"
    implementation "com.squareup.okhttp3:okhttp:$okhttp_version"
    implementation "com.squareup.retrofit2:converter-gson:$retrofit_version"
    implementation "io.reactivex.rxjava2:rxandroid:$rxandroid_version"
    implementation "androidx.recyclerview:recyclerview:1.0.0"
    implementation "org.jetbrains.anko:anko-commons:$anko_version"
    implementation "net.danlew:android.joda:$joda_version"
    implementation "android.arch.lifecycle:viewmodel:$viewmodel_version"
    implementation "androidx.lifecycle:lifecycle-livedata:$livedata_version"
    implementation "androidx.room:room-runtime:$room_version"
    implementation "androidx.room:room-ktx:$room_version"
    implementation "androidx.room:room-rxjava2:$room_version"

    implementation "com.airbnb.android:paris:$paris_version"

    implementation "com.google.dagger:dagger:$dagger_version"
    implementation "com.google.dagger:dagger-android:$dagger_version"
    implementation "com.google.dagger:dagger-android-support:$dagger_version"

    kapt  "com.google.dagger:dagger-compiler:$dagger_version"
    kapt "com.google.dagger:dagger-android-processor:$dagger_version"

    kapt "androidx.room:room-compiler:$room_version"

    kapt "com.airbnb.android:paris-processor:$paris_version"

    testImplementation "junit:junit:4.12"
    testImplementation "org.junit.jupiter:junit-jupiter-api:$junit5_version"
    testRuntimeOnly "org.junit.jupiter:junit-jupiter-engine:$junit5_version"
    testImplementation "org.mockito:mockito-core:$mockito_version"
    testImplementation "com.nhaarman.mockitokotlin2:mockito-kotlin:$mockito_kotlin_version"
    testImplementation "joda-time:joda-time:$joda_version"

    androidTestImplementation "androidx.test.ext:junit:$android_test_runner_version"
    androidTestImplementation "androidx.test:rules:$android_test_version"
    androidTestImplementation "androidx.arch.core:core-testing:$arch_testing_version"
    androidTestImplementation "junit:junit:4.12"
    androidTestImplementation "androidx.room:room-testing:$room_version"
}
